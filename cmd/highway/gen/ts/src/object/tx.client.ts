// @generated by protobuf-ts 2.2.1 with parameter long_type_string,generate_dependencies
// @generated from protobuf file "object/tx.proto" (package "sonrio.sonr.object", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Msg } from "./tx";
import type { MsgDeleteObjectResponse } from "./tx";
import type { MsgDeleteObject } from "./tx";
import type { MsgUpdateObjectResponse } from "./tx";
import type { MsgUpdateObject } from "./tx";
import type { MsgReadObjectResponse } from "./tx";
import type { MsgReadObject } from "./tx";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MsgCreateObjectResponse } from "./tx";
import type { MsgCreateObject } from "./tx";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the Msg service.
 *
 * @generated from protobuf service sonrio.sonr.object.Msg
 */
export interface IMsgClient {
    /**
     * @generated from protobuf rpc: CreateObject(sonrio.sonr.object.MsgCreateObject) returns (sonrio.sonr.object.MsgCreateObjectResponse);
     */
    createObject(input: MsgCreateObject, options?: RpcOptions): UnaryCall<MsgCreateObject, MsgCreateObjectResponse>;
    /**
     * @generated from protobuf rpc: ReadObject(sonrio.sonr.object.MsgReadObject) returns (sonrio.sonr.object.MsgReadObjectResponse);
     */
    readObject(input: MsgReadObject, options?: RpcOptions): UnaryCall<MsgReadObject, MsgReadObjectResponse>;
    /**
     * @generated from protobuf rpc: UpdateObject(sonrio.sonr.object.MsgUpdateObject) returns (sonrio.sonr.object.MsgUpdateObjectResponse);
     */
    updateObject(input: MsgUpdateObject, options?: RpcOptions): UnaryCall<MsgUpdateObject, MsgUpdateObjectResponse>;
    /**
     * this line is used by starport scaffolding # proto/tx/rpc
     *
     * @generated from protobuf rpc: DeleteObject(sonrio.sonr.object.MsgDeleteObject) returns (sonrio.sonr.object.MsgDeleteObjectResponse);
     */
    deleteObject(input: MsgDeleteObject, options?: RpcOptions): UnaryCall<MsgDeleteObject, MsgDeleteObjectResponse>;
}
/**
 * Msg defines the Msg service.
 *
 * @generated from protobuf service sonrio.sonr.object.Msg
 */
export class MsgClient implements IMsgClient, ServiceInfo {
    typeName = Msg.typeName;
    methods = Msg.methods;
    options = Msg.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateObject(sonrio.sonr.object.MsgCreateObject) returns (sonrio.sonr.object.MsgCreateObjectResponse);
     */
    createObject(input: MsgCreateObject, options?: RpcOptions): UnaryCall<MsgCreateObject, MsgCreateObjectResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgCreateObject, MsgCreateObjectResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ReadObject(sonrio.sonr.object.MsgReadObject) returns (sonrio.sonr.object.MsgReadObjectResponse);
     */
    readObject(input: MsgReadObject, options?: RpcOptions): UnaryCall<MsgReadObject, MsgReadObjectResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgReadObject, MsgReadObjectResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateObject(sonrio.sonr.object.MsgUpdateObject) returns (sonrio.sonr.object.MsgUpdateObjectResponse);
     */
    updateObject(input: MsgUpdateObject, options?: RpcOptions): UnaryCall<MsgUpdateObject, MsgUpdateObjectResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgUpdateObject, MsgUpdateObjectResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * this line is used by starport scaffolding # proto/tx/rpc
     *
     * @generated from protobuf rpc: DeleteObject(sonrio.sonr.object.MsgDeleteObject) returns (sonrio.sonr.object.MsgDeleteObjectResponse);
     */
    deleteObject(input: MsgDeleteObject, options?: RpcOptions): UnaryCall<MsgDeleteObject, MsgDeleteObjectResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgDeleteObject, MsgDeleteObjectResponse>("unary", this._transport, method, opt, input);
    }
}
