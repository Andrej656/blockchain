syntax = "proto3";
import "object/object.proto";
package sonrio.sonr.channel;

import "channel/how_is.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/sonr-io/sonr/x/channel/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateChannel(MsgCreateChannel) returns (MsgCreateChannelResponse);
  rpc ReadChannel(MsgReadChannel) returns (MsgReadChannelResponse);
  rpc DeleteChannel(MsgDeleteChannel) returns (MsgDeleteChannelResponse);
  rpc UpdateChannel(MsgUpdateChannel) returns (MsgUpdateChannelResponse);
  rpc CreateHowIs(MsgCreateHowIs) returns (MsgCreateHowIsResponse);
  rpc UpdateHowIs(MsgUpdateHowIs) returns (MsgUpdateHowIsResponse);
  rpc DeleteHowIs(MsgDeleteHowIs) returns (MsgDeleteHowIsResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateChannel {
  string creator = 1;
  string name = 2;
  string description = 3;
  string object_did = 4;
  int64 ttl = 5;
  int64 max_size = 6;
}

message MsgCreateChannelResponse {
}

message MsgReadChannel {
  string creator = 1;
  string did = 2;
}

message MsgReadChannelResponse {
}

message MsgDeleteChannel {
  string creator = 1;
  string did = 2;
  string publicKey = 3;
}

message MsgDeleteChannelResponse {
}


message MsgUpdateChannel {
  string creator = 1;
  string did = 2;
}

message MsgUpdateChannelResponse {
}

message MsgCreateHowIs {
  string creator = 1;
  string index = 2;

  string did = 3;
  string value = 4;
}
message MsgCreateHowIsResponse {}

message MsgUpdateHowIs {
  string creator = 1;
  string index = 2;

  string did = 3;
  string value = 4;
}
message MsgUpdateHowIsResponse {}

message MsgDeleteHowIs {
  string creator = 1;
  string index = 2;
}
message MsgDeleteHowIsResponse {}

// this line is used by starport scaffolding # proto/tx/message
