syntax = "proto3";
package sonrio.sonr.object;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "object/params.proto";
import "object/what_is.proto";
import "registry/who_is.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/sonr-io/blockchain/x/object/types";

// Query defines the gRPC querier service.
service Query {
  	// Params
  	//
  	// Parameters queries the parameters of the module.
  	rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    	option (google.api.http).get = "/sonrio/sonr/object/params";
  	}

	// WhatIs
	//
	// Queries a WhatIs by index.
	rpc WhatIs(QueryGetWhatIsRequest) returns (QueryGetWhatIsResponse) {
		option (google.api.http).get = "/sonr-io/sonr/object/what_is/{index}";
	}

	// WhatIsAll
	//
	// Queries a list of WhatIs items.
	rpc WhatIsAll(QueryAllWhatIsRequest) returns (QueryAllWhatIsResponse) {
		option (google.api.http).get = "/sonr-io/sonr/object/what_is";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetWhatIsRequest {
	string index = 1;
  	sonrio.sonr.registry.Session session = 2;
}

message QueryGetWhatIsResponse {
	WhatIs whatIs = 1 [(gogoproto.nullable) = false];
}

message QueryAllWhatIsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
	sonrio.sonr.registry.Session session = 2;
}

message QueryAllWhatIsResponse {
	repeated WhatIs whatIs = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
