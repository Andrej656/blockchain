// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: blob/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgUploadBlob struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Label        string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Path         string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	RefDid       string `protobuf:"bytes,4,opt,name=refDid,proto3" json:"refDid,omitempty"`
	Size_        int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	LastModified int32  `protobuf:"varint,6,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
}

func (m *MsgUploadBlob) Reset()         { *m = MsgUploadBlob{} }
func (m *MsgUploadBlob) String() string { return proto.CompactTextString(m) }
func (*MsgUploadBlob) ProtoMessage()    {}
func (*MsgUploadBlob) Descriptor() ([]byte, []int) {
	return fileDescriptor_f945cb94fe124aae, []int{0}
}
func (m *MsgUploadBlob) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUploadBlob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUploadBlob.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUploadBlob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUploadBlob.Merge(m, src)
}
func (m *MsgUploadBlob) XXX_Size() int {
	return m.Size()
}
func (m *MsgUploadBlob) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUploadBlob.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUploadBlob proto.InternalMessageInfo

func (m *MsgUploadBlob) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUploadBlob) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MsgUploadBlob) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MsgUploadBlob) GetRefDid() string {
	if m != nil {
		return m.RefDid
	}
	return ""
}

func (m *MsgUploadBlob) GetSize_() int32 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *MsgUploadBlob) GetLastModified() int32 {
	if m != nil {
		return m.LastModified
	}
	return 0
}

type MsgUploadBlobResponse struct {
}

func (m *MsgUploadBlobResponse) Reset()         { *m = MsgUploadBlobResponse{} }
func (m *MsgUploadBlobResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUploadBlobResponse) ProtoMessage()    {}
func (*MsgUploadBlobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f945cb94fe124aae, []int{1}
}
func (m *MsgUploadBlobResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUploadBlobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUploadBlobResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUploadBlobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUploadBlobResponse.Merge(m, src)
}
func (m *MsgUploadBlobResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUploadBlobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUploadBlobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUploadBlobResponse proto.InternalMessageInfo

type MsgDownloadBlob struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Path    string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Timeout int32  `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (m *MsgDownloadBlob) Reset()         { *m = MsgDownloadBlob{} }
func (m *MsgDownloadBlob) String() string { return proto.CompactTextString(m) }
func (*MsgDownloadBlob) ProtoMessage()    {}
func (*MsgDownloadBlob) Descriptor() ([]byte, []int) {
	return fileDescriptor_f945cb94fe124aae, []int{2}
}
func (m *MsgDownloadBlob) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDownloadBlob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDownloadBlob.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDownloadBlob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDownloadBlob.Merge(m, src)
}
func (m *MsgDownloadBlob) XXX_Size() int {
	return m.Size()
}
func (m *MsgDownloadBlob) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDownloadBlob.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDownloadBlob proto.InternalMessageInfo

func (m *MsgDownloadBlob) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDownloadBlob) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgDownloadBlob) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MsgDownloadBlob) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type MsgDownloadBlobResponse struct {
}

func (m *MsgDownloadBlobResponse) Reset()         { *m = MsgDownloadBlobResponse{} }
func (m *MsgDownloadBlobResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDownloadBlobResponse) ProtoMessage()    {}
func (*MsgDownloadBlobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f945cb94fe124aae, []int{3}
}
func (m *MsgDownloadBlobResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDownloadBlobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDownloadBlobResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDownloadBlobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDownloadBlobResponse.Merge(m, src)
}
func (m *MsgDownloadBlobResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDownloadBlobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDownloadBlobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDownloadBlobResponse proto.InternalMessageInfo

type MsgSyncBlob struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Path    string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Timeout int32  `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (m *MsgSyncBlob) Reset()         { *m = MsgSyncBlob{} }
func (m *MsgSyncBlob) String() string { return proto.CompactTextString(m) }
func (*MsgSyncBlob) ProtoMessage()    {}
func (*MsgSyncBlob) Descriptor() ([]byte, []int) {
	return fileDescriptor_f945cb94fe124aae, []int{4}
}
func (m *MsgSyncBlob) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSyncBlob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSyncBlob.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSyncBlob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSyncBlob.Merge(m, src)
}
func (m *MsgSyncBlob) XXX_Size() int {
	return m.Size()
}
func (m *MsgSyncBlob) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSyncBlob.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSyncBlob proto.InternalMessageInfo

func (m *MsgSyncBlob) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSyncBlob) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgSyncBlob) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MsgSyncBlob) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type MsgSyncBlobResponse struct {
}

func (m *MsgSyncBlobResponse) Reset()         { *m = MsgSyncBlobResponse{} }
func (m *MsgSyncBlobResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSyncBlobResponse) ProtoMessage()    {}
func (*MsgSyncBlobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f945cb94fe124aae, []int{5}
}
func (m *MsgSyncBlobResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSyncBlobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSyncBlobResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSyncBlobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSyncBlobResponse.Merge(m, src)
}
func (m *MsgSyncBlobResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSyncBlobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSyncBlobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSyncBlobResponse proto.InternalMessageInfo

type MsgDeleteBlob struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did       string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	PublicKey string `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (m *MsgDeleteBlob) Reset()         { *m = MsgDeleteBlob{} }
func (m *MsgDeleteBlob) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBlob) ProtoMessage()    {}
func (*MsgDeleteBlob) Descriptor() ([]byte, []int) {
	return fileDescriptor_f945cb94fe124aae, []int{6}
}
func (m *MsgDeleteBlob) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBlob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBlob.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBlob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBlob.Merge(m, src)
}
func (m *MsgDeleteBlob) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBlob) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBlob.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBlob proto.InternalMessageInfo

func (m *MsgDeleteBlob) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteBlob) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgDeleteBlob) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type MsgDeleteBlobResponse struct {
}

func (m *MsgDeleteBlobResponse) Reset()         { *m = MsgDeleteBlobResponse{} }
func (m *MsgDeleteBlobResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBlobResponse) ProtoMessage()    {}
func (*MsgDeleteBlobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f945cb94fe124aae, []int{7}
}
func (m *MsgDeleteBlobResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBlobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBlobResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBlobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBlobResponse.Merge(m, src)
}
func (m *MsgDeleteBlobResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBlobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBlobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBlobResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUploadBlob)(nil), "sonrio.sonr.blob.MsgUploadBlob")
	proto.RegisterType((*MsgUploadBlobResponse)(nil), "sonrio.sonr.blob.MsgUploadBlobResponse")
	proto.RegisterType((*MsgDownloadBlob)(nil), "sonrio.sonr.blob.MsgDownloadBlob")
	proto.RegisterType((*MsgDownloadBlobResponse)(nil), "sonrio.sonr.blob.MsgDownloadBlobResponse")
	proto.RegisterType((*MsgSyncBlob)(nil), "sonrio.sonr.blob.MsgSyncBlob")
	proto.RegisterType((*MsgSyncBlobResponse)(nil), "sonrio.sonr.blob.MsgSyncBlobResponse")
	proto.RegisterType((*MsgDeleteBlob)(nil), "sonrio.sonr.blob.MsgDeleteBlob")
	proto.RegisterType((*MsgDeleteBlobResponse)(nil), "sonrio.sonr.blob.MsgDeleteBlobResponse")
}

func init() { proto.RegisterFile("blob/tx.proto", fileDescriptor_f945cb94fe124aae) }

var fileDescriptor_f945cb94fe124aae = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0x6d, 0xa6, 0x93, 0x0e, 0x73, 0x99, 0x11, 0x23, 0x43, 0xa9, 0xa9, 0x20, 0x94, 0x08, 0x44,
	0x59, 0x90, 0x48, 0xb0, 0x67, 0x51, 0x75, 0x87, 0x22, 0xa1, 0x20, 0x2a, 0x81, 0xd8, 0xe4, 0xe1,
	0xa6, 0x16, 0x6e, 0x1c, 0xc5, 0xae, 0x68, 0xf9, 0x0a, 0xfe, 0x81, 0x9f, 0x61, 0xd9, 0x25, 0x4b,
	0xd4, 0x8a, 0xff, 0x40, 0x71, 0x93, 0x34, 0x29, 0x81, 0xc2, 0x82, 0x95, 0xef, 0xe3, 0xf8, 0xdc,
	0xa3, 0x7b, 0x6c, 0xb8, 0xf4, 0x19, 0xf7, 0x6d, 0xb9, 0xb4, 0x92, 0x94, 0x4b, 0x8e, 0xae, 0x04,
	0x8f, 0x53, 0xca, 0xad, 0xec, 0xb0, 0xb2, 0x96, 0xf9, 0x45, 0x83, 0x4b, 0x47, 0x44, 0x6f, 0x12,
	0xc6, 0xbd, 0x70, 0xc4, 0xb8, 0x8f, 0x30, 0x9c, 0x05, 0x29, 0xf1, 0x24, 0x4f, 0xb1, 0x36, 0xd0,
	0x86, 0xe7, 0x6e, 0x91, 0xa2, 0x5b, 0xa0, 0x33, 0xcf, 0x27, 0x0c, 0x9f, 0xa8, 0xfa, 0x2e, 0x41,
	0x08, 0x4e, 0x13, 0x4f, 0xce, 0x70, 0x5b, 0x15, 0x55, 0x8c, 0x6e, 0x43, 0x27, 0x25, 0xd3, 0x31,
	0x0d, 0xf1, 0xa9, 0xaa, 0xe6, 0x59, 0x86, 0x15, 0xf4, 0x13, 0xc1, 0xfa, 0x40, 0x1b, 0xea, 0xae,
	0x8a, 0x91, 0x09, 0x17, 0xcc, 0x13, 0xd2, 0xe1, 0x21, 0x9d, 0x52, 0x12, 0xe2, 0x8e, 0xea, 0xd5,
	0x6a, 0x66, 0x0f, 0xba, 0x35, 0x91, 0x2e, 0x11, 0x09, 0x8f, 0x05, 0x31, 0x3f, 0xc0, 0x0d, 0x47,
	0x44, 0x63, 0xfe, 0x31, 0xfe, 0x0b, 0xfd, 0x57, 0xd0, 0x0e, 0x69, 0x98, 0xab, 0xcf, 0xc2, 0x46,
	0xed, 0x18, 0xce, 0x24, 0x9d, 0x13, 0xbe, 0x90, 0x4a, 0xbc, 0xee, 0x16, 0xa9, 0x79, 0x07, 0x7a,
	0x07, 0xc3, 0x4a, 0x1d, 0x11, 0x5c, 0x77, 0x44, 0xf4, 0x7a, 0x15, 0x07, 0xff, 0x59, 0x43, 0x17,
	0x6e, 0x56, 0x06, 0x95, 0xf3, 0xdf, 0x2a, 0x17, 0xc7, 0x84, 0x11, 0x49, 0xfe, 0x59, 0xc1, 0x5d,
	0x38, 0x4f, 0x16, 0x3e, 0xa3, 0xc1, 0x4b, 0xb2, 0xca, 0x65, 0xec, 0x0b, 0xf9, 0xee, 0xf7, 0xd4,
	0xc5, 0xcc, 0x67, 0x3f, 0x4e, 0xa0, 0xed, 0x88, 0x08, 0x4d, 0x00, 0x2a, 0xcf, 0xe7, 0xbe, 0x75,
	0xf8, 0xc6, 0xac, 0x9a, 0x75, 0xfd, 0xc7, 0x47, 0x00, 0x05, 0x3f, 0x7a, 0x0f, 0x17, 0x35, 0x63,
	0x1f, 0x34, 0x5e, 0xac, 0x42, 0xfa, 0x4f, 0x8e, 0x42, 0x4a, 0xf6, 0x57, 0x70, 0xad, 0xb4, 0xeb,
	0x5e, 0xe3, 0xb5, 0xa2, 0xdd, 0x7f, 0xf4, 0xc7, 0x76, 0xc9, 0x38, 0x01, 0xa8, 0x18, 0xd0, 0xbc,
	0x87, 0x3d, 0xe0, 0x37, 0x7b, 0xf8, 0x75, 0xcf, 0xa3, 0x17, 0x5f, 0x37, 0x86, 0xb6, 0xde, 0x18,
	0xda, 0xf7, 0x8d, 0xa1, 0x7d, 0xde, 0x1a, 0xad, 0xf5, 0xd6, 0x68, 0x7d, 0xdb, 0x1a, 0xad, 0x77,
	0x0f, 0x23, 0x2a, 0x67, 0x0b, 0xdf, 0x0a, 0xf8, 0xdc, 0xce, 0x58, 0x9e, 0x52, 0xae, 0x4e, 0x7b,
	0x69, 0xef, 0xfe, 0xfd, 0x2a, 0x21, 0xc2, 0xef, 0xa8, 0xbf, 0xff, 0xfc, 0x67, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x25, 0x7d, 0x2a, 0x3e, 0x0c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	UploadBlob(ctx context.Context, in *MsgUploadBlob, opts ...grpc.CallOption) (*MsgUploadBlobResponse, error)
	DownloadBlob(ctx context.Context, in *MsgDownloadBlob, opts ...grpc.CallOption) (*MsgDownloadBlobResponse, error)
	SyncBlob(ctx context.Context, in *MsgSyncBlob, opts ...grpc.CallOption) (*MsgSyncBlobResponse, error)
	DeleteBlob(ctx context.Context, in *MsgDeleteBlob, opts ...grpc.CallOption) (*MsgDeleteBlobResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UploadBlob(ctx context.Context, in *MsgUploadBlob, opts ...grpc.CallOption) (*MsgUploadBlobResponse, error) {
	out := new(MsgUploadBlobResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.blob.Msg/UploadBlob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DownloadBlob(ctx context.Context, in *MsgDownloadBlob, opts ...grpc.CallOption) (*MsgDownloadBlobResponse, error) {
	out := new(MsgDownloadBlobResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.blob.Msg/DownloadBlob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SyncBlob(ctx context.Context, in *MsgSyncBlob, opts ...grpc.CallOption) (*MsgSyncBlobResponse, error) {
	out := new(MsgSyncBlobResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.blob.Msg/SyncBlob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteBlob(ctx context.Context, in *MsgDeleteBlob, opts ...grpc.CallOption) (*MsgDeleteBlobResponse, error) {
	out := new(MsgDeleteBlobResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.blob.Msg/DeleteBlob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	UploadBlob(context.Context, *MsgUploadBlob) (*MsgUploadBlobResponse, error)
	DownloadBlob(context.Context, *MsgDownloadBlob) (*MsgDownloadBlobResponse, error)
	SyncBlob(context.Context, *MsgSyncBlob) (*MsgSyncBlobResponse, error)
	DeleteBlob(context.Context, *MsgDeleteBlob) (*MsgDeleteBlobResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UploadBlob(ctx context.Context, req *MsgUploadBlob) (*MsgUploadBlobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadBlob not implemented")
}
func (*UnimplementedMsgServer) DownloadBlob(ctx context.Context, req *MsgDownloadBlob) (*MsgDownloadBlobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadBlob not implemented")
}
func (*UnimplementedMsgServer) SyncBlob(ctx context.Context, req *MsgSyncBlob) (*MsgSyncBlobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncBlob not implemented")
}
func (*UnimplementedMsgServer) DeleteBlob(ctx context.Context, req *MsgDeleteBlob) (*MsgDeleteBlobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBlob not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UploadBlob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUploadBlob)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UploadBlob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.blob.Msg/UploadBlob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UploadBlob(ctx, req.(*MsgUploadBlob))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DownloadBlob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDownloadBlob)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DownloadBlob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.blob.Msg/DownloadBlob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DownloadBlob(ctx, req.(*MsgDownloadBlob))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SyncBlob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSyncBlob)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SyncBlob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.blob.Msg/SyncBlob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SyncBlob(ctx, req.(*MsgSyncBlob))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteBlob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteBlob)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteBlob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.blob.Msg/DeleteBlob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteBlob(ctx, req.(*MsgDeleteBlob))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sonrio.sonr.blob.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadBlob",
			Handler:    _Msg_UploadBlob_Handler,
		},
		{
			MethodName: "DownloadBlob",
			Handler:    _Msg_DownloadBlob_Handler,
		},
		{
			MethodName: "SyncBlob",
			Handler:    _Msg_SyncBlob_Handler,
		},
		{
			MethodName: "DeleteBlob",
			Handler:    _Msg_DeleteBlob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blob/tx.proto",
}

func (m *MsgUploadBlob) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUploadBlob) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUploadBlob) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastModified != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastModified))
		i--
		dAtA[i] = 0x30
	}
	if m.Size_ != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Size_))
		i--
		dAtA[i] = 0x28
	}
	if len(m.RefDid) > 0 {
		i -= len(m.RefDid)
		copy(dAtA[i:], m.RefDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RefDid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUploadBlobResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUploadBlobResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUploadBlobResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDownloadBlob) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDownloadBlob) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDownloadBlob) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Timeout != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timeout))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDownloadBlobResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDownloadBlobResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDownloadBlobResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSyncBlob) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSyncBlob) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSyncBlob) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Timeout != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timeout))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSyncBlobResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSyncBlobResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSyncBlobResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBlob) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBlob) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBlob) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBlobResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBlobResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBlobResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUploadBlob) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RefDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Size_ != 0 {
		n += 1 + sovTx(uint64(m.Size_))
	}
	if m.LastModified != 0 {
		n += 1 + sovTx(uint64(m.LastModified))
	}
	return n
}

func (m *MsgUploadBlobResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDownloadBlob) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Timeout != 0 {
		n += 1 + sovTx(uint64(m.Timeout))
	}
	return n
}

func (m *MsgDownloadBlobResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSyncBlob) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Timeout != 0 {
		n += 1 + sovTx(uint64(m.Timeout))
	}
	return n
}

func (m *MsgSyncBlobResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteBlob) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteBlobResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUploadBlob) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUploadBlob: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUploadBlob: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			m.Size_ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size_ |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastModified", wireType)
			}
			m.LastModified = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastModified |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUploadBlobResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUploadBlobResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUploadBlobResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDownloadBlob) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDownloadBlob: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDownloadBlob: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			m.Timeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timeout |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDownloadBlobResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDownloadBlobResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDownloadBlobResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSyncBlob) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSyncBlob: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSyncBlob: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			m.Timeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timeout |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSyncBlobResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSyncBlobResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSyncBlobResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBlob) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBlob: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBlob: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBlobResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBlobResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBlobResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
